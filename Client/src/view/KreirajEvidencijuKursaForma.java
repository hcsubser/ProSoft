/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view;

import controller.Controller;
import domain.TipCasa;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import domain.Instruktor;
import domain.Polaznik;
import domain.EvidencijaKursa;
import domain.StavkaEvidencijeKursa;
import java.text.DateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
//import javax.swing.JTextField;
import tableModel.TableModelEvidencijaKursa;
import tableModel.TableModelStavkaEvidencijeKursa;
//import validator.Validator;

/**
 *
 * @author Milan
 */
public class KreirajEvidencijuKursaForma extends javax.swing.JDialog {

    private UpravljajEvidencijamaKursaForma uof;
    private EvidencijaKursa evidencijakursaInsert;
    private EvidencijaKursa evidencijakursaChange;
    private double ukupna = 0;

    public double getUkupna() {
        return ukupna;
    }

    public void setUkupna(double ukupna) {
        this.ukupna= ukupna;
    }

   
    public KreirajEvidencijuKursaForma() throws Exception {
        initComponents();
        this.evidencijakursaChange = null;
        setTitle("Kreiraj evidencijukursa");
        setResizable(false);
        setLocationRelativeTo(null);
        popuniInstruktoreIzBaze();
        popuniKupceIzBaze();
        popuniTipCasaeIzBaze();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        TableModelStavkaEvidencijeKursa tmodel = new TableModelStavkaEvidencijeKursa();
        //txtUkupno.setText(""+tmodel.getUkupnaCena());
        tmodel.setKof(this);
        tableStavke.setModel(tmodel);
        JOptionPane.showMessageDialog(this, "Sistem je kreirao evidencijukursa!", "Obavestenje", JOptionPane.INFORMATION_MESSAGE);
    }

    public KreirajEvidencijuKursaForma(UpravljajEvidencijamaKursaForma parent, EvidencijaKursa evidencijakursa) throws Exception {

        this.uof = (UpravljajEvidencijamaKursaForma) parent;
        this.evidencijakursaChange = evidencijakursa;
        initComponents();
        setTitle("Promeni evidencijukursa");
        setResizable(false);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        popuniInstruktoreIzBaze();
        popuniKupceIzBaze();
        popuniTipCasaeIzBaze();
        popuniPromena(evidencijakursa);
        TableModelStavkaEvidencijeKursa tmodel = new TableModelStavkaEvidencijeKursa(evidencijakursa);
        tmodel.setKof(this);
        tableStavke.setModel(tmodel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        comboBoxInstruktor = new javax.swing.JComboBox<>();
        comboBoxPolaznik = new javax.swing.JComboBox<>();
        btnOdustani = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableStavke = new javax.swing.JTable();
        btnDodajStavku = new javax.swing.JToggleButton();
        jLabel6 = new javax.swing.JLabel();
        txtUkupno = new javax.swing.JTextField();
        comboTipCasai = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtNapomena = new javax.swing.JTextArea();
        jLabel13 = new javax.swing.JLabel();
        btnUkloniStavku = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        txtCena = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        chkZavrsen = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Instruktor");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Polaznik");

        comboBoxInstruktor.setBackground(new java.awt.Color(153, 255, 204));
        comboBoxInstruktor.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        comboBoxInstruktor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxInstruktorActionPerformed(evt);
            }
        });

        comboBoxPolaznik.setBackground(new java.awt.Color(153, 255, 204));
        comboBoxPolaznik.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        btnOdustani.setBackground(new java.awt.Color(153, 255, 204));
        btnOdustani.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnOdustani.setText("Otkazi");
        btnOdustani.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOdustaniActionPerformed(evt);
            }
        });

        btnSave.setBackground(new java.awt.Color(153, 255, 204));
        btnSave.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnSave.setText("Sacuvaj");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        tableStavke.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tableStavke.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tableStavke);

        btnDodajStavku.setBackground(new java.awt.Color(153, 255, 204));
        btnDodajStavku.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnDodajStavku.setText("Dodaj stavku");
        btnDodajStavku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajStavkuActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Ukupan iznos");

        txtUkupno.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtUkupno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUkupnoActionPerformed(evt);
            }
        });

        comboTipCasai.setBackground(new java.awt.Color(153, 255, 204));
        comboTipCasai.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        comboTipCasai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTipCasaiActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("TipCasa");

        txtDate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDateActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setText("Datum");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel12.setText("Napomena");

        txtNapomena.setColumns(20);
        txtNapomena.setRows(5);
        jScrollPane2.setViewportView(txtNapomena);

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel13.setText("Stavke evidencijekursa");

        btnUkloniStavku.setBackground(new java.awt.Color(153, 255, 204));
        btnUkloniStavku.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnUkloniStavku.setText("Ukloni stavku");
        btnUkloniStavku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUkloniStavkuActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel15.setText("Cena");

        txtCena.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel18.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel18.setText("EvidencijaKursa");

        jLabel2.setText("Zavrsen");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(232, 232, 232))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2)
                                    .addGap(198, 198, 198))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(comboTipCasai, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(44, 44, 44)
                                            .addComponent(chkZavrsen)))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtCena, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(88, 88, 88)
                                    .addComponent(jLabel12))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(30, 30, 30)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(btnDodajStavku)
                                        .addComponent(btnUkloniStavku)))))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(1, 1, 1)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(361, 361, 361)
                                    .addComponent(jLabel3)
                                    .addGap(206, 206, 206)
                                    .addComponent(jLabel4))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(278, 278, 278)
                                    .addComponent(comboBoxInstruktor, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(32, 32, 32)
                                    .addComponent(comboBoxPolaznik, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnOdustani, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(34, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(402, 402, 402)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtUkupno, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(comboBoxPolaznik, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboBoxInstruktor, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel15)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboTipCasai, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkZavrsen)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnDodajStavku, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(btnUkloniStavku, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24)
                .addComponent(jLabel13)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtUkupno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOdustani, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOdustaniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOdustaniActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnOdustaniActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

        /*if (tableStavke.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Nije moguce sacuvati evidencijukursa bez ijedne stavke!", "Greska", JOptionPane.ERROR_MESSAGE);
            return;
        }*/
       /* Date datumIzdavanja = new Date();
        try {

            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            if (txtDatumIzdavanja.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Datum nije popunjen!", "Greska", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (!Validator.isValidDate(txtDatumIzdavanja.getText())) {
                JOptionPane.showMessageDialog(this, "Uneti datum nije validan. Proveriti da li je format datuma YYYY-MM-DD.", "Greska", JOptionPane.ERROR_MESSAGE);
                return;
            }
            datumIzdavanja = dateFormat.parse(txtDatumIzdavanja.getText());
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, "Pogresan format datuma!\nDatum treba da bude u formatu YYYY-MM-DD", "Greska", JOptionPane.ERROR_MESSAGE);
            return;
        }*/
        Instruktor c = (Instruktor) comboBoxInstruktor.getSelectedItem();
        Polaznik k = (Polaznik) comboBoxPolaznik.getSelectedItem();
        if (evidencijakursaChange == null) {
            try {
                //throw new RuntimeException("Simulacija greske");
                TableModelStavkaEvidencijeKursa tmodel = (TableModelStavkaEvidencijeKursa) tableStavke.getModel();
                tmodel.setKof(this);
                ArrayList<StavkaEvidencijeKursa> stavke = tmodel.getListaStavki();
               // evidencijakursaInsert = new EvidencijaKursa(-1, Integer.parseInt(txtUkupno.getText().trim()),  c, k, stavke);
                evidencijakursaInsert = new EvidencijaKursa(-1, ukupna,  c, k, stavke);
                System.out.println("otp:"+evidencijakursaInsert);
                       
                Controller.getInstance().dodajEvidencijuKursa(evidencijakursaInsert);
                JOptionPane.showMessageDialog(this, "Sistem je sacuvao evidencijukursa!", "Obavestenje", JOptionPane.INFORMATION_MESSAGE);
                this.dispose();
            } catch (Exception ex) {
                 JOptionPane.showMessageDialog(this, "Sistem ne moze da sacuva evidencijukursa!", "Greska", JOptionPane.ERROR_MESSAGE);
                 ex.printStackTrace();
                return;

            }
        } else {
            try {
                //throw new RuntimeException("Simulacija greske");
                TableModelStavkaEvidencijeKursa tmodel = (TableModelStavkaEvidencijeKursa) tableStavke.getModel();
                tmodel.setKof(this);
                ArrayList<StavkaEvidencijeKursa> stavke = tmodel.getListaStavki();
                evidencijakursaChange.setInstruktor(c);
                evidencijakursaChange.setPolaznik(k);
                evidencijakursaChange.setUkupanIznos(ukupna);
                evidencijakursaChange.setStavkeEvidencijeKursa(stavke);
                Controller.getInstance().promeniEvidencijuKursa(evidencijakursaChange);
                JOptionPane.showMessageDialog(this, "Sistem je izmenio evidencijukursa!", "Obavestenje", JOptionPane.INFORMATION_MESSAGE);
                uof.getTblOtp().setModel(new TableModelEvidencijaKursa());
                this.dispose();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Sistem ne moze da izmeni evidencijukursa!", "Greska", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDodajStavkuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajStavkuActionPerformed
        // TODO add your handling code here:
        if (txtDate.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nisu sva polja popunjena za tipCasa!", "Greska", JOptionPane.ERROR_MESSAGE);
            return;
        }

        TipCasa tc = (TipCasa) comboTipCasai.getSelectedItem();
        DateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        Date datumPrisustva = new Date();
        //sdf.parse("2025-01-01");
        try {
            //datumPrisustva = sdf.parse(txtDate.getText().trim());
            datumPrisustva = sdf.parse(txtDate.getText().trim());
            
        } catch (ParseException ex) {
            Logger.getLogger(KreirajEvidencijuKursaForma.class.getName()).log(Level.SEVERE, null, ex);
        }
        //if (!Validator.isValidNumber(txtCenaBezPDVPopust.getText()) || !Validator.isValidNumber(txtCenaSaPDVPopust.getText())) {
        //    JOptionPane.showMessageDialog(this, "Pogresan format cene!", "Greska", JOptionPane.ERROR_MESSAGE);

       // }
        //double cenaBez = Math.floor(Double.parseDouble(txtCenaBezPDVPopust.getText()) * 100.0) / 100.0;
        double cena = Math.floor(Double.parseDouble(txtCena.getText()) * 100.0) / 100.0;
        String napomena = txtNapomena.getText();
        TableModelStavkaEvidencijeKursa tmodel = (TableModelStavkaEvidencijeKursa) tableStavke.getModel();
        StavkaEvidencijeKursa s1;
        if (evidencijakursaChange == null) {
            s1 = new StavkaEvidencijeKursa(-1, datumPrisustva, napomena, chkZavrsen.isSelected(), tc, evidencijakursaInsert);
        } else {
            s1 = new StavkaEvidencijeKursa(-1, datumPrisustva, napomena, chkZavrsen.isSelected(), tc, evidencijakursaChange);
        }
        /*if (tmodel.unetTipCasa(tc)) {
            JOptionPane.showMessageDialog(this, "TipCasa je vec dodat u evidencijukursa!", "Greska", JOptionPane.ERROR_MESSAGE);
            return;
        }*/
        tmodel.dodajStavkuEvidencijeKursa(s1);
        tableStavke.setModel(tmodel);
        resetPodataka();
        ukupna = tmodel.getUkupnaCena();
        //u//kupnaBez = tmodel.getUkupnaCenaBezPDV();
       // ukupanPopust = tmodel.getUkupanPopust();

       // txtUkupnoBez.setText(ukupnaBez + "");
        txtUkupno.setText(ukupna + "");
       // txtUkupanPopust.setText(ukupanPopust + "");
    }//GEN-LAST:event_btnDodajStavkuActionPerformed

    private void comboTipCasaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTipCasaiActionPerformed
        // TODO add your handling code here:
        TipCasa a = (TipCasa) comboTipCasai.getSelectedItem();
        //double cenaBez = Math.floor(a.getCenaBezPDV() * (1 - a.getPopust() / 100) * 100.0) / 100.0;
        //double cenaSa = Math.floor((a.getCenaBezPDV() * (1 - a.getPopust() / 100)) *(1 + (a.getPoreskaStopa().getVrednost()) / 100) * 100) / 100.0;
        //txtCenaBezPDVPopust.setText(cenaBez + "");
       // txtCenaBezPDVBezPopusta.setText(a.getCenaBezPDV() + "");
        txtCena.setText(a.getCena() + "");
       // txtCenaSaPDVPopust.setText(cenaSa + "");
        //txtPopust.setText(a.getPopust() + "");
    }//GEN-LAST:event_comboTipCasaiActionPerformed

    private void btnUkloniStavkuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUkloniStavkuActionPerformed
        // TODO add your handling code here:
        int selected = tableStavke.getSelectedRow();
        if (selected == -1) {
            JOptionPane.showMessageDialog(this, "Nista nije selektovano iz tabele", "Greska", JOptionPane.ERROR_MESSAGE);
            return;
        }
        TableModelStavkaEvidencijeKursa tmodel = (TableModelStavkaEvidencijeKursa) tableStavke.getModel();
        tmodel.obrisiStavkuEvidencijeKursa(selected);
        tableStavke.setModel(tmodel);
        
        //TODO txtCena.setText(tmodel.getCena() + "");
        ukupna = tmodel.getUkupnaCena();
        txtUkupno.setText(ukupna+"");

    }//GEN-LAST:event_btnUkloniStavkuActionPerformed

    private void comboBoxInstruktorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxInstruktorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxInstruktorActionPerformed

    private void txtUkupnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUkupnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUkupnoActionPerformed

    private void txtDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnDodajStavku;
    private javax.swing.JButton btnOdustani;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUkloniStavku;
    private javax.swing.JCheckBox chkZavrsen;
    private javax.swing.JComboBox<domain.Instruktor> comboBoxInstruktor;
    private javax.swing.JComboBox<domain.Polaznik> comboBoxPolaznik;
    private javax.swing.JComboBox<domain.TipCasa> comboTipCasai;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tableStavke;
    private javax.swing.JTextField txtCena;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextArea txtNapomena;
    private javax.swing.JTextField txtUkupno;
    // End of variables declaration//GEN-END:variables

    private void popuniInstruktoreIzBaze() throws Exception {
        //txtCenaBezPDVPopust.setEnabled(false);
        //t//xtCenaSaPDVPopust.setEnabled(false);
        //txtCenaBezPDVBezPopusta.setEnabled(false);
        txtCena.setEnabled(false);
       // txtUkupanPopust.setEnabled(false);
       // txtUkupnoBez.setEnabled(false);
        txtUkupno.setEnabled(false);
        //txtPopust.setEnabled(false);
        comboBoxPolaznik.removeAllItems();
        ArrayList<Instruktor> instruktori = Controller.getInstance().ucitajInstruktoreIzBaze();
        for (Instruktor c : instruktori) {
            comboBoxInstruktor.addItem(c);
        }
    }

    private void popuniKupceIzBaze() throws Exception {
        comboBoxPolaznik.removeAllItems();
        ArrayList<Polaznik> polaznici = Controller.getInstance().ucitajKupceIzBaze();
        for (Polaznik k : polaznici) {
            comboBoxPolaznik.addItem(k);
        }
    }

    private void popuniTipCasaeIzBaze() throws Exception {
        comboTipCasai.removeAllItems();
        ArrayList<TipCasa> tipCasai = Controller.getInstance().ucitajTipCasaeIzBaze();
        for (TipCasa a : tipCasai) {
            comboTipCasai.addItem(a);
        }
    }

    private void resetPodataka() {
        //txtCenaBezPDVPopust.setText("");
       // txtCenaSaPDVPopust.setText("");
       // txtCenaBezPDVBezPopusta.setText("");
        txtCena.setText("");
       // txtPopust.setText("");
        txtDate.setText("");
        txtNapomena.setText("");
    }

    private void popuniPromena(EvidencijaKursa evidencijakursa) {
        try {
            ukupna = evidencijakursa.getUkupanIznos();
            comboBoxInstruktor.setSelectedItem(evidencijakursa.getInstruktor());
            comboBoxPolaznik.setSelectedItem(evidencijakursa.getPolaznik());
            txtUkupno.setText(evidencijakursa.getUkupanIznos() + "");
            tableStavke.setModel(new TableModelStavkaEvidencijeKursa(evidencijakursa));
        } catch (Exception ex) {
            Logger.getLogger(KreirajEvidencijuKursaForma.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
}
