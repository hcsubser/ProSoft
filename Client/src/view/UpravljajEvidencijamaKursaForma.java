/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view;

import tableModel.TableModelEvidencijaKursa;
import controller.Controller;
import domain.Instruktor;
import domain.Polaznik;
import domain.EvidencijaKursa;
import domain.StavkaEvidencijeKursa;
import java.sql.SQLIntegrityConstraintViolationException;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;

/**
 *
 * @author Milan
 */
public class UpravljajEvidencijamaKursaForma extends javax.swing.JDialog {

    public JTable getTblOtp() {
        return tblOtp;
    }

    public void setTblOtp(JTable tblOtp) {
        this.tblOtp = tblOtp;
    }

    /**
     * Creates new form PromeniForma
     */
    public UpravljajEvidencijamaKursaForma() {
        try {
            initComponents();
            promena();
            setTitle("Upravljaj evidencijakursama");
            setResizable(false);
            setLocationRelativeTo(null);
            setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            btnSearch.setVisible(false);
            comboInstruktor.setVisible(false);
            comboDatum.setVisible(false);
            comboPolaznik.setVisible(false);
            lblinstruktor.setVisible(false);
            lblpolaznik.setVisible(false);
            datum.setVisible(false);
            TableModelEvidencijaKursa tmodel = new TableModelEvidencijaKursa();
            tblOtp.setModel(tmodel);
        } catch (Exception ex) {
            Logger.getLogger(UpravljajEvidencijamaKursaForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public UpravljajEvidencijamaKursaForma(boolean pretraga) {
        try {
            initComponents();
            popuniCombo();
            setTitle("Pretrazi evidencijukursa");
            btnChange.setVisible(false);
            btnDelete.setVisible(false);
            setResizable(false);
            setLocationRelativeTo(null);
            TableModelEvidencijaKursa tmodel = new TableModelEvidencijaKursa();
            tblOtp.setModel(tmodel);
        } catch (Exception ex) {
            Logger.getLogger(UpravljajEvidencijamaKursaForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblOtp = new javax.swing.JTable();
        btnChange = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        datum = new javax.swing.JLabel();
        lblinstruktor = new javax.swing.JLabel();
        lblpolaznik = new javax.swing.JLabel();
        comboPolaznik = new javax.swing.JComboBox<>();
        comboInstruktor = new javax.swing.JComboBox<>();
        comboDatum = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tblOtp.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblOtp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblOtp);

        btnChange.setBackground(new java.awt.Color(153, 255, 204));
        btnChange.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnChange.setText(" Promeni");
        btnChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(153, 255, 204));
        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton2.setText("Otkazi");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(153, 255, 204));
        btnDelete.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnDelete.setText("Obrisi");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnSearch.setBackground(new java.awt.Color(153, 255, 204));
        btnSearch.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnSearch.setText("Pretrazi");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        datum.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        datum.setText("Datum izdavanja");

        lblinstruktor.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblinstruktor.setText("Instruktor");

        lblpolaznik.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblpolaznik.setText("Polaznik");

        comboPolaznik.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        comboPolaznik.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboPolaznikActionPerformed(evt);
            }
        });

        comboInstruktor.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        comboDatum.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboDatum, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(datum)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(comboInstruktor, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(comboPolaznik, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(92, 92, 92)
                                .addComponent(lblinstruktor)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblpolaznik, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(105, 105, 105)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnChange, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 534, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblpolaznik)
                            .addComponent(lblinstruktor)
                            .addComponent(datum))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboInstruktor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboDatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboPolaznik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnChange, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeActionPerformed
        try {
            int selektovanRed = tblOtp.getSelectedRow();
            if (selektovanRed == -1) {
                JOptionPane.showMessageDialog(this, "Nijedan red nije selektovan", "Greska", JOptionPane.ERROR_MESSAGE);
            } else {

                try {
                    //throw new RuntimeException("Simulacija greske");
                   TableModelEvidencijaKursa model = (TableModelEvidencijaKursa) tblOtp.getModel();
                    EvidencijaKursa evidencijakursa = model.getEvidencijaKursa(selektovanRed);
                    System.out.println("view.UpravljajEvidencijamaKursaForma.btnChangeActionPerformed()");
                    System.out.println("view.UpravljajEv "+ Controller.getInstance().ucitajStavkeEvidencijeKursaIzBaze(evidencijakursa));
                    JOptionPane.showMessageDialog(this, "Sistem je nasao evidencijukursa!", "Obavestenje", JOptionPane.INFORMATION_MESSAGE);
                    //StavkaEvidencijeKursa sek = new StavkaEvidencijeKursa(-1, new Date(), "", true, null, evidencijakursa);
                    System.out.println("view.Upravlj "+Controller.getInstance().ucitajStavkeEvidencijeKursaIzBaze(evidencijakursa));

                    KreirajEvidencijuKursaForma kekf = new KreirajEvidencijuKursaForma(this, evidencijakursa);
                    kekf.setVisible(true);
                    TableModelEvidencijaKursa tmodel = new TableModelEvidencijaKursa();
                    tblOtp.setModel(tmodel);
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, "Sistem nije uspeo da nadje evidencijukursa!", "Greska", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(UpravljajEvidencijamaKursaForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnChangeActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        try {
            int selektovanRed = tblOtp.getSelectedRow();
            if (selektovanRed == -1) {
                JOptionPane.showMessageDialog(this, "Nista nije selektovano", "Greska", JOptionPane.ERROR_MESSAGE);
                return;
            }
            TableModelEvidencijaKursa model = (TableModelEvidencijaKursa) tblOtp.getModel();
            EvidencijaKursa zaBrisanje = model.getEvidencijaKursa(selektovanRed);
            try {
                //throw new RuntimeException("Simulacija greske");
                Controller.getInstance().obrisiEvidencijuKursa(zaBrisanje);
            } catch (SQLIntegrityConstraintViolationException ex) {
                JOptionPane.showMessageDialog(this, "Sistem ne moze da obrise evidencijukursa!", "Greska", JOptionPane.ERROR_MESSAGE);
                return;
            }
            JOptionPane.showMessageDialog(this, "Sistem je uspesno obrisao evidencijukursa", "Obavestenje", JOptionPane.INFORMATION_MESSAGE);

            TableModelEvidencijaKursa tmodel = new TableModelEvidencijaKursa();
            tblOtp.setModel(tmodel);
        } catch (Exception ex) {
            Logger.getLogger(UpravljajInstruktorimaForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        try {
            // TODO add your handling code here:
            Object obj = (Object) comboDatum.getSelectedItem();
            Date datum = new Date();
            if (obj.equals("Bilo koji")) {
                datum = null;
            } else {
                datum = (Date) comboDatum.getSelectedItem();
            }
            Instruktor instruktor = (Instruktor) comboInstruktor.getSelectedItem();
            Polaznik polaznik = (Polaznik) comboPolaznik.getSelectedItem();
            btnChange.setVisible(true);
            btnDelete.setVisible(true);
            EvidencijaKursa filter = new EvidencijaKursa();
            if (instruktor.getIme().equals("Bilo") && instruktor.getPrezime().equals("koji")) {
                instruktor = null;
            }
            if (polaznik.getIme().equals("Bilo koji")) {
                polaznik = null;
            }
           // filter.setDatum datum);
            filter.setInstruktor(instruktor);
            filter.setPolaznik(polaznik);
            ArrayList<EvidencijaKursa> filtriraneEvidencijeKursa = Controller.getInstance().pretraziEvidencijeKursa(filter);
            TableModelEvidencijaKursa model = new TableModelEvidencijaKursa(filtriraneEvidencijeKursa);
            tblOtp.setModel(model);
            if (model.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "Sistem nije uspeo da nadje evidencijekursa po zadatim kriterijumima!", "Greska", JOptionPane.ERROR_MESSAGE);
                return;
            } else {
                JOptionPane.showMessageDialog(this, "Sistem je nasao evidencijekursa po zadatim kriterijumima!", "Obavestenje", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
        } catch (Exception ex) {
            Logger.getLogger(UpravljajEvidencijamaKursaForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void comboPolaznikActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboPolaznikActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboPolaznikActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpravljajEvidencijamaKursaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpravljajEvidencijamaKursaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpravljajEvidencijamaKursaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpravljajEvidencijamaKursaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChange;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<domain.Instruktor> comboInstruktor;
    private javax.swing.JComboBox<Object> comboDatum;
    private javax.swing.JComboBox<domain.Polaznik> comboPolaznik;
    private javax.swing.JLabel datum;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblinstruktor;
    private javax.swing.JLabel lblpolaznik;
    private javax.swing.JTable tblOtp;
    // End of variables declaration//GEN-END:variables

    private void promena() {
        btnSearch.setVisible(false);
        lblinstruktor.setVisible(false);
        lblpolaznik.setVisible(false);
        datum.setVisible(false);
        comboInstruktor.setVisible(false);
        comboDatum.setVisible(false);
        comboPolaznik.setVisible(false);
    }

    private void popuniCombo() throws Exception {

        comboPolaznik.removeAllItems();
        Polaznik defaultPolaznik = new Polaznik();
        defaultPolaznik.setIme("Bilo koji");
        comboPolaznik.addItem(defaultPolaznik);
        ArrayList<Polaznik> polaznici = Controller.getInstance().ucitajKupceIzBaze();
        for (Polaznik k : polaznici) {
            comboPolaznik.addItem(k);
        }
        comboInstruktor.removeAllItems();
        Instruktor defaultInstruktor = new Instruktor();
        defaultInstruktor.setIme("Bilo");
        defaultInstruktor.setPrezime("koji");
        comboInstruktor.addItem(defaultInstruktor);
        ArrayList<Instruktor> instruktori = Controller.getInstance().ucitajInstruktoreIzBaze();
        for (Instruktor c : instruktori) {
            comboInstruktor.addItem(c);
        }
        comboDatum.removeAllItems();
        comboDatum.addItem("Bilo koji");
        ArrayList<EvidencijaKursa> evidencijekursa = Controller.getInstance().ucitajEvidencijeKursaIzBaze();
        //for (EvidencijaKursa o : evidencijekursa) {
        //    comboDatum.addItem(o.getDatumIzdavanja());
        //}
    }
}
