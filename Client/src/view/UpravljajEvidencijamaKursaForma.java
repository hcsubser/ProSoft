/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view;

import tableModel.TableModelEvidencijaKursa;
import controller.Controller;
import domain.Instruktor;
import domain.Polaznik;
import domain.EvidencijaKursa;
import domain.StavkaEvidencijeKursa;
import java.awt.Color;
import java.sql.SQLIntegrityConstraintViolationException;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;

/**
 *
 * @author Milan
 */
public class UpravljajEvidencijamaKursaForma extends javax.swing.JDialog {

    public JTable getTblOtp() {
        return tblOtp;
    }

    public void setTblOtp(JTable tblOtp) {
        this.tblOtp = tblOtp;
    }

    /**
     * Creates new form PromeniForma
     */
    public UpravljajEvidencijamaKursaForma() {
        try {
            initComponents();
            popuniCombo();
            setTitle("Upravljaj evidencijakursama");
            setResizable(false);
            setLocationRelativeTo(null);
            setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            
            //boje:
            tblOtp.getTableHeader().setBackground(Color.decode("#000000"));
            tblOtp.getTableHeader().setForeground(Color.decode("#ffffff"));
            //tblOtp.get
            
            //btnSearch.setVisible(false);
            //comboInstruktor.setVisible(false);
            //comboDatum.setVisible(false);
            //comboPolaznik.setVisible(false);
            //lblinstruktor.setVisible(false);
            //lblpolaznik.setVisible(false);
            //datum.setVisible(false);
            TableModelEvidencijaKursa tmodel = new TableModelEvidencijaKursa();
            tblOtp.setModel(tmodel);
        } catch (Exception ex) {
            Logger.getLogger(UpravljajEvidencijamaKursaForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /*public UpravljajEvidencijamaKursaForma(boolean pretraga) {
        try {
            initComponents();
            popuniCombo();
            setTitle("Pretrazi evidencijukursa");
            //btnChange.setVisible(false);
            //btnDelete.setVisible(false);
            setResizable(false);
            setLocationRelativeTo(null);
            TableModelEvidencijaKursa tmodel = new TableModelEvidencijaKursa();
            tblOtp.setModel(tmodel);
        } catch (Exception ex) {
            Logger.getLogger(UpravljajEvidencijamaKursaForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }*/

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOtp = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        btnDodaj = new javax.swing.JButton();
        btnChange = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        comboInstruktor = new javax.swing.JComboBox<>();
        comboPolaznik = new javax.swing.JComboBox<>();
        lblinstruktor = new javax.swing.JLabel();
        lblpolaznik = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(51, 51, 51));

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setForeground(new java.awt.Color(51, 51, 51));

        jScrollPane1.setBackground(new java.awt.Color(51, 51, 51));
        jScrollPane1.setForeground(new java.awt.Color(51, 51, 51));

        tblOtp.setBackground(new java.awt.Color(51, 51, 51));
        tblOtp.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblOtp.setForeground(new java.awt.Color(255, 255, 255));
        tblOtp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblOtp.setGridColor(new java.awt.Color(153, 153, 153));
        tblOtp.setSelectionBackground(new java.awt.Color(0, 204, 255));
        tblOtp.setSelectionForeground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(tblOtp);

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 0, 0));
        jButton2.setText("Izadji");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        btnSearch.setBackground(new java.awt.Color(255, 255, 255));
        btnSearch.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(0, 0, 0));
        btnSearch.setText("Pretrazi");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnDodaj.setBackground(new java.awt.Color(0, 255, 0));
        btnDodaj.setForeground(new java.awt.Color(0, 0, 0));
        btnDodaj.setText("Dodaj");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        btnChange.setBackground(new java.awt.Color(0, 204, 255));
        btnChange.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnChange.setForeground(new java.awt.Color(0, 0, 0));
        btnChange.setText(" Promeni");
        btnChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(255, 0, 0));
        btnDelete.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(0, 0, 0));
        btnDelete.setText("Obrisi");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        comboInstruktor.setBackground(new java.awt.Color(0, 204, 255));
        comboInstruktor.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        comboInstruktor.setForeground(new java.awt.Color(0, 0, 0));

        comboPolaznik.setBackground(new java.awt.Color(0, 204, 255));
        comboPolaznik.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        comboPolaznik.setForeground(new java.awt.Color(0, 0, 0));
        comboPolaznik.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboPolaznikActionPerformed(evt);
            }
        });

        lblinstruktor.setBackground(new java.awt.Color(51, 51, 51));
        lblinstruktor.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblinstruktor.setForeground(new java.awt.Color(255, 255, 255));
        lblinstruktor.setText("Instruktor");

        lblpolaznik.setBackground(new java.awt.Color(51, 51, 51));
        lblpolaznik.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblpolaznik.setForeground(new java.awt.Color(255, 255, 255));
        lblpolaznik.setText("Polaznik");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 534, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboInstruktor, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblinstruktor, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(149, 149, 149)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboPolaznik, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblpolaznik, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnChange, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDodaj, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblpolaznik)
                    .addComponent(lblinstruktor))
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboInstruktor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboPolaznik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnDodaj, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnChange, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(86, 86, 86))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeActionPerformed
        try {
            int selektovanRed = tblOtp.getSelectedRow();
            if (selektovanRed == -1) {
                JOptionPane.showMessageDialog(this, "Nijedan red nije selektovan", "Greska", JOptionPane.ERROR_MESSAGE);
            } else {

                try {
                    //throw new RuntimeException();
                    TableModelEvidencijaKursa model = (TableModelEvidencijaKursa) tblOtp.getModel();
                    EvidencijaKursa evidencijakursa = model.getEvidencijaKursa(selektovanRed);
                    System.out.println("view.UpravljajEvidencijamaKursaForma.btnChangeActionPerformed()");
                    System.out.println("view.UpravljajEv "+ Controller.getInstance().ucitajStavkeEvidencijeKursaIzBaze(evidencijakursa));
                    JOptionPane.showMessageDialog(this, "Sistem je nasao evidencijukursa!", "Obavestenje", JOptionPane.INFORMATION_MESSAGE);
                    //StavkaEvidencijeKursa sek = new StavkaEvidencijeKursa(-1, new Date(), "", true, null, evidencijakursa);
                    System.out.println("view.Upravlj "+Controller.getInstance().ucitajStavkeEvidencijeKursaIzBaze(evidencijakursa));

                    KreirajEvidencijuKursaForma kekf = new KreirajEvidencijuKursaForma(this, evidencijakursa);
                    kekf.setVisible(true);
                    TableModelEvidencijaKursa tmodel = new TableModelEvidencijaKursa();
                    tblOtp.setModel(tmodel);
                    this.dispose();

                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, "Sistem nije uspeo da nadje evidencijukursa!", "Greska", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(UpravljajEvidencijamaKursaForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnChangeActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        try {
            int selektovanRed = tblOtp.getSelectedRow();
            if (selektovanRed == -1) {
                JOptionPane.showMessageDialog(this, "Nista nije selektovano", "Greska", JOptionPane.ERROR_MESSAGE);
                return;
            }
            TableModelEvidencijaKursa model = (TableModelEvidencijaKursa) tblOtp.getModel();
            EvidencijaKursa zaBrisanje = model.getEvidencijaKursa(selektovanRed);
            try {
                //throw new RuntimeException("Simulacija greske");
                Controller.getInstance().obrisiEvidencijuKursa(zaBrisanje);
            } catch (SQLIntegrityConstraintViolationException ex) {
                JOptionPane.showMessageDialog(this, "Sistem ne moze da obrise evidencijukursa!", "Greska", JOptionPane.ERROR_MESSAGE);
                return;
            }
            JOptionPane.showMessageDialog(this, "Sistem je uspesno obrisao evidencijukursa", "Obavestenje", JOptionPane.INFORMATION_MESSAGE);

            TableModelEvidencijaKursa tmodel = new TableModelEvidencijaKursa();
            tblOtp.setModel(tmodel);
        } catch (Exception ex) {
            Logger.getLogger(UpravljajInstruktorimaForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        try {
            Instruktor instruktor = (Instruktor) comboInstruktor.getSelectedItem();
            Polaznik polaznik = (Polaznik) comboPolaznik.getSelectedItem();
            btnChange.setVisible(true);
            btnDelete.setVisible(true);
            EvidencijaKursa filter = new EvidencijaKursa();
            if (instruktor.getIme().equals("Svi")){
                instruktor = null;
            }
            if (polaznik.getIme().equals("Svi")) {
                polaznik = null;
            }

            filter.setInstruktor(instruktor);
            filter.setPolaznik(polaznik);
            ArrayList<EvidencijaKursa> filtriraneEvidencijeKursa = Controller.getInstance().pretraziEvidencijeKursa(filter);
            TableModelEvidencijaKursa model = new TableModelEvidencijaKursa(filtriraneEvidencijeKursa);
            tblOtp.setModel(model);
            if (model.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "Sistem nije uspeo da nadje evidencijekursa po zadatim kriterijumima!", "Greska", JOptionPane.ERROR_MESSAGE);
                return;
            } else {
                JOptionPane.showMessageDialog(this, "Sistem je nasao evidencijekursa po zadatim kriterijumima!", "Obavestenje", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            
        } catch (Exception ex) {
            Logger.getLogger(UpravljajEvidencijamaKursaForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void comboPolaznikActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboPolaznikActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboPolaznikActionPerformed

    
    
    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        // TODO add your handling code here:
        try {
            KreirajEvidencijuKursaForma ko = new KreirajEvidencijuKursaForma();
            ko.setVisible(true);
            this.dispose();
            // tblOtp.setModel(mto);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem nije uspeo da kreira evidencijukursa!", "Greska", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_btnDodajActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChange;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<domain.Instruktor> comboInstruktor;
    private javax.swing.JComboBox<domain.Polaznik> comboPolaznik;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblinstruktor;
    private javax.swing.JLabel lblpolaznik;
    private javax.swing.JTable tblOtp;
    // End of variables declaration//GEN-END:variables


    private void popuniCombo() throws Exception {

        comboPolaznik.removeAllItems();
        Polaznik defaultPolaznik = new Polaznik();
        defaultPolaznik.setIme("Svi");
        defaultPolaznik.setPrezime("");
        comboPolaznik.addItem(defaultPolaznik);
        ArrayList<Polaznik> polaznici = Controller.getInstance().ucitajPolaznikeIzBaze();
        for (Polaznik k : polaznici) {
            comboPolaznik.addItem(k);
        }
        comboInstruktor.removeAllItems();
        Instruktor defaultInstruktor = new Instruktor();
        defaultInstruktor.setIme("Svi");
        defaultInstruktor.setPrezime("");
        comboInstruktor.addItem(defaultInstruktor);
        ArrayList<Instruktor> instruktori = Controller.getInstance().ucitajInstruktoreIzBaze();
        for (Instruktor c : instruktori) {
            comboInstruktor.addItem(c);
        }
        //comboDatum.removeAllItems();
        //comboDatum.addItem("Bilo koji");
        ArrayList<EvidencijaKursa> evidencijekursa = Controller.getInstance().ucitajEvidencijeKursaIzBaze();
        //for (EvidencijaKursa o : evidencijekursa) {
        //    comboDatum.addItem(o.getDatumIzdavanja());
        //}
    }
}
