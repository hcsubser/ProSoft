/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import tableModel.TableModelPolaznik;
import controller.Controller;
import javax.swing.JOptionPane;
import domain.Polaznik;
import domain.Mesto;
import java.awt.Color;
import java.sql.SQLIntegrityConstraintViolationException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JTable;

/**
 *
 * @author Milan
 */
public class UpravljajPolaznicimaForma extends javax.swing.JFrame {

    public JTable getTblPolaznici() {
        return tblPolaznici;
    }

    public void setTblPolaznici(JTable tblPolaznici) {
        this.tblPolaznici = tblPolaznici;
    }

    private ArrayList<Polaznik> lista;

    /**
     * Creates new form PromeniPolaznikForma
     */
    public UpravljajPolaznicimaForma() throws Exception {
        initComponents();
        lista = Controller.getInstance().ucitajPolaznikeIzBaze();
        setTitle("Upravljaj polaznicima");
        popuniCombo();
        setResizable(false);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        tblPolaznici.getTableHeader().setBackground(Color.decode("#000000"));
        tblPolaznici.getTableHeader().setForeground(Color.decode("#ffffff"));

        try {
            tblPolaznici.setModel(new TableModelPolaznik());
        } catch (Exception ex) {
            Logger.getLogger(UpravljajPolaznicimaForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtPolaznik = new javax.swing.JLabel();
        comboPolaznik = new javax.swing.JComboBox<>();
        txtMesto = new javax.swing.JLabel();
        comboMesto = new javax.swing.JComboBox<>();
        btnPretrazi = new javax.swing.JButton();
        btnDodaj = new javax.swing.JButton();
        btnPromeni = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();
        btnNazad = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPolaznici = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setForeground(new java.awt.Color(51, 51, 51));

        txtPolaznik.setBackground(new java.awt.Color(51, 51, 51));
        txtPolaznik.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtPolaznik.setForeground(new java.awt.Color(255, 255, 255));
        txtPolaznik.setText("Polaznik");

        comboPolaznik.setBackground(new java.awt.Color(0, 204, 255));
        comboPolaznik.setEditable(true);
        comboPolaznik.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        comboPolaznik.setForeground(new java.awt.Color(0, 0, 0));

        txtMesto.setBackground(new java.awt.Color(51, 51, 51));
        txtMesto.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtMesto.setForeground(new java.awt.Color(255, 255, 255));
        txtMesto.setText("Mesto");

        comboMesto.setBackground(new java.awt.Color(0, 204, 255));
        comboMesto.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        comboMesto.setForeground(new java.awt.Color(0, 0, 0));

        btnPretrazi.setBackground(new java.awt.Color(255, 255, 255));
        btnPretrazi.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnPretrazi.setForeground(new java.awt.Color(0, 0, 0));
        btnPretrazi.setText("Pretrazi");
        btnPretrazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPretraziActionPerformed(evt);
            }
        });

        btnDodaj.setBackground(new java.awt.Color(0, 255, 0));
        btnDodaj.setForeground(new java.awt.Color(0, 0, 0));
        btnDodaj.setText("Dodaj");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        btnPromeni.setBackground(new java.awt.Color(0, 204, 255));
        btnPromeni.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnPromeni.setForeground(new java.awt.Color(0, 0, 0));
        btnPromeni.setText("Promeni");
        btnPromeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPromeniActionPerformed(evt);
            }
        });

        btnObrisi.setBackground(new java.awt.Color(255, 0, 0));
        btnObrisi.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnObrisi.setForeground(new java.awt.Color(0, 0, 0));
        btnObrisi.setText("Obrisi");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        btnNazad.setBackground(new java.awt.Color(255, 255, 255));
        btnNazad.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnNazad.setForeground(new java.awt.Color(0, 0, 0));
        btnNazad.setText("Otkazi");
        btnNazad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNazadActionPerformed(evt);
            }
        });

        tblPolaznici.setBackground(new java.awt.Color(51, 51, 51));
        tblPolaznici.setForeground(new java.awt.Color(255, 255, 255));
        tblPolaznici.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblPolaznici.setGridColor(new java.awt.Color(153, 153, 153));
        tblPolaznici.setSelectionBackground(new java.awt.Color(0, 204, 255));
        tblPolaznici.setSelectionForeground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(tblPolaznici);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPolaznik)
                            .addComponent(comboPolaznik, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboMesto, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMesto, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnPretrazi, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnNazad, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnPromeni, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnObrisi, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(btnDodaj, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(btnPretrazi, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(249, 249, 249))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(btnDodaj, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btnPromeni, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btnObrisi, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btnNazad, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPolaznik)
                            .addComponent(txtMesto))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboMesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboPolaznik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        // TODO add your handling code here:
        try {
            int selektovanRed = tblPolaznici.getSelectedRow();
            if (selektovanRed == -1) {
                JOptionPane.showMessageDialog(this, "Nista nije selektovano", "Greska", JOptionPane.ERROR_MESSAGE);
                return;
            }
            try {
                //throw new Exception();
                Controller.getInstance().obrisiPolaznika(lista.get(selektovanRed));
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Sistem ne moze da obrise polaznika!", "Greska", JOptionPane.ERROR_MESSAGE);
                return;
            }
            JOptionPane.showMessageDialog(this, "Sistem je uspesno obrisao polaznika!", "Obavestenje", JOptionPane.INFORMATION_MESSAGE);

            tblPolaznici.setModel(new TableModelPolaznik());
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void btnPromeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPromeniActionPerformed
        try {
            // TODO add your handling code here:

            int selektovanRed = tblPolaznici.getSelectedRow();
            if (selektovanRed == -1) {
                JOptionPane.showMessageDialog(this, "Nista nije selektovano!", "Greska", JOptionPane.ERROR_MESSAGE);
                return;
            }
            TableModelPolaznik model = (TableModelPolaznik) tblPolaznici.getModel();
            Polaznik polaznikChange = model.getPolaznik(selektovanRed);
            
            try {
                //throw new RuntimeException("Simulacija greske");
                JOptionPane.showMessageDialog(this, "Sistem je nasao polaznika!", "Obavestenje", JOptionPane.INFORMATION_MESSAGE);
                KreirajPolaznikaForma kf = new KreirajPolaznikaForma(this, polaznikChange);
                kf.setVisible(true);
                this.dispose();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Sistem nije uspeo da nadje polaznika!", "Greska", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } catch (Exception ex) {
            Logger.getLogger(UpravljajPolaznicimaForma.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_btnPromeniActionPerformed

    private void btnNazadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNazadActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnNazadActionPerformed

    private void btnPretraziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPretraziActionPerformed
        try {
            // TODO add your handling code here:
            Mesto mesto = (Mesto) comboMesto.getSelectedItem();
            Polaznik polaznik = (Polaznik) comboPolaznik.getSelectedItem();
            Polaznik filter = new Polaznik();
            if (mesto.getGrad().equals("Bilo koji")) {
                mesto = null;
            }
            if (polaznik.getIme().equals("Bilo koji")) {
                polaznik = null;
            }
            filter.setMesto(mesto);
            if (polaznik != null) {
                filter.setIme(polaznik.getIme());
            }
            ArrayList<Polaznik> filtriraniPolaznici = Controller.getInstance().pretraziPolaznike(filter);
            TableModelPolaznik model = new TableModelPolaznik(filtriraniPolaznici);
            if (model.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "Sistem nije uspeo da nadje polaznike po zadatim kriterijumima!", "Greska", JOptionPane.ERROR_MESSAGE);
                return;
            } else {
                JOptionPane.showMessageDialog(this, "Sistem je nasao polaznike po zadatim kriterijumima!", "Obavestenje", JOptionPane.INFORMATION_MESSAGE);
                tblPolaznici.setModel(model);
            }

        } catch (Exception ex) {
            Logger.getLogger(UpravljajPolaznicimaForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnPretraziActionPerformed

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        // TODO add your handling code here:
        KreirajPolaznikaForma kpf = new KreirajPolaznikaForma();
        //kpf.set
        kpf.setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_btnDodajActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnNazad;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnPretrazi;
    private javax.swing.JButton btnPromeni;
    private javax.swing.JComboBox<Mesto> comboMesto;
    private javax.swing.JComboBox<domain.Polaznik> comboPolaznik;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPolaznici;
    private javax.swing.JLabel txtMesto;
    private javax.swing.JLabel txtPolaznik;
    // End of variables declaration//GEN-END:variables

    private void popuniCombo() {
        try {
            comboPolaznik.removeAllItems();
            Polaznik defaultPolaznik = new Polaznik();
            defaultPolaznik.setIme("Bilo koji");
            comboPolaznik.addItem(defaultPolaznik);
            ArrayList<Polaznik> polaznici = Controller.getInstance().ucitajPolaznikeIzBaze();
            for (Polaznik k : polaznici) {
                comboPolaznik.addItem(k);
            }

            comboMesto.removeAllItems();
            Mesto defaultMesto = new Mesto();
            defaultMesto.setGrad("Bilo koji");
            comboMesto.addItem(defaultMesto);
            List<Mesto> mesto = Controller.getInstance().ucitajMestaIzBaze();
            for (Mesto m : mesto) {
                comboMesto.addItem(m);
            }
        } catch (Exception ex) {
            Logger.getLogger(UpravljajPolaznicimaForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
